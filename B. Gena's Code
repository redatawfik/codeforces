import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solution {

    public static void main(String[] args) {

        FastScanner scan = new FastScanner(System.in);

        int n = scan.nextInt();

        StringBuilder m = new StringBuilder("1");

        boolean bool = true;
        String s = "1";

        for (int i = 0; i < n; i++) {
            String x = scan.next();
            if(x.equals("0")){
                System.out.println("0");
                return;
            }

            boolean beauty = true;
            if(bool){
                int one = 0;
                innerLoop:
                for (int j = 0, q = x.length(); j < q; j++) {

                    if((x.charAt(j) != '0' && x.charAt(j) != '1') || one > 1){
                        bool = false;
                        beauty = false;
                        s = x;
                        break innerLoop;
                    }else if(x.charAt(j) == '1'){
                        one++;
                    }

                    if(one > 1){
                        bool = false;
                        beauty = false;
                        s = x;
                        break innerLoop;
                    }
                }
            }

            if(beauty){
                m.append(x.substring(1));
            }

        }

        s += m.substring(1);

        System.out.println(s);

    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static class FastScanner {
        private BufferedReader br;
        private StringTokenizer st;

        public FastScanner(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public long[] nextLongArray(int n) {
            long[] tab = new long[n];
            for (int i = 0; i < tab.length; i++) {
                tab[i] = nextLong();
            }
            return tab;
        }
    }
}
