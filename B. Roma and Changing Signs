import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.util.stream.IntStream;


public class Solution {


    public static void main(String[] args) {
        FastScanner scan = new FastScanner(System.in);

        int n = scan.nextInt();
        int k = scan.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scan.nextInt();
        }

        while (arr[0] < 0 && k > 0) {

            for (int i = 0; i < arr.length; i++) {

                if (arr[i] < 0 && k > 0) {
                    arr[i] *= -1;
                    k--;
                }

            }

            Arrays.sort(arr);
        }

        if (k <= 0) {
            int sumArr = IntStream.of(arr).sum();
            System.out.println(sumArr);
        } else {
            if (k % 2 != 0) {
                arr[0] *= -1;
                int sumArr = IntStream.of(arr).sum();
                System.out.println(sumArr);
            } else {
                int sumArr = IntStream.of(arr).sum();
                System.out.println(sumArr);
            }
        }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    static class FastScanner {
        private BufferedReader br;
        private StringTokenizer st;

        public FastScanner(InputStream stream) {
            br = new BufferedReader(new InputStreamReader(stream));
        }

        public String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public long[] nextLongArray(int n) {
            long[] tab = new long[n];
            for (int i = 0; i < tab.length; i++) {
                tab[i] = nextLong();
            }
            return tab;
        }
    }
}
